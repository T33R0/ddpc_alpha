import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/Header";
import { ToastProvider } from "@/components/ui/ToastProvider";
import ThemeProvider from "@/components/theme/ThemeProvider";
import { getServerSupabase } from "@/lib/supabase";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Load user theme setting; fallback to 'system'
  let initialTheme: "system" | "light" | "dark" = "system";
  try {
    const supabase = await getServerSupabase();
    const { data: { user } } = await supabase.auth.getUser();
    if (user && (user.user_metadata as Record<string, unknown>)?.theme_pref) {
      const t = String((user.user_metadata as Record<string, unknown>).theme_pref);
      if (t === "light" || t === "dark" || t === "system") initialTheme = t;
    }
  } catch {}

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider initialTheme={initialTheme}>
          <ToastProvider>
            <Header />
            <main className="max-w-5xl mx-auto px-4 py-6">{children}</main>
          </ToastProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
